#!/usr/bin/env python3
"""
üîç DIAGNOSTIC BASE DE DONN√âES BERZERK
====================================
Script simple pour analyser les d√©cisions stock√©es
"""

import json
import sqlite3


def diagnostic_db():
    """Analyse le contenu de la base de donn√©es"""
    conn = sqlite3.connect("berzerk.db")
    cursor = conn.cursor()

    # Compter les articles avec d√©cisions
    cursor.execute("SELECT COUNT(*) FROM articles WHERE decision_json IS NOT NULL")
    total_analyzed = cursor.fetchone()[0]

    # Compter les articles avec statut "analyzed"
    cursor.execute('SELECT COUNT(*) FROM articles WHERE status = "analyzed"')
    status_analyzed = cursor.fetchone()[0]

    print(f"üìä Total articles avec d√©cisions: {total_analyzed}")
    print(f"üìä Articles avec statut 'analyzed': {status_analyzed}")

    # Examiner les d√©cisions
    cursor.execute(
        "SELECT id, title, decision_json FROM articles WHERE decision_json IS NOT NULL LIMIT 5"
    )
    decisions = cursor.fetchall()

    print(f"\nüîç √âchantillon de {len(decisions)} d√©cisions:")
    print("-" * 60)

    long_count = 0
    for article_id, title, decision_json in decisions:
        print(f"\nüì∞ Article {article_id}: {title[:50]}...")
        try:
            decision = json.loads(decision_json)

            # V√©rifier le format de la d√©cision
            if isinstance(decision, dict):
                action = decision.get("action", "N/A")
                ticker = decision.get("ticker", "N/A")

                print(f"   üéØ Action: {action}")
                print(f"   üìà Ticker: {ticker}")

                if action and action.upper() in ["LONG", "ACHETER"]:  # Compatibilit√© avec anciennes donn√©es
                    long_count += 1
                    print("   ‚úÖ D√âCISION LONG/ACHAT TROUV√âE!")

            else:
                print(f"   ‚ö†Ô∏è  Format inattendu: {type(decision)}")

        except json.JSONDecodeError as e:
            print(f"   ‚ùå Erreur JSON: {e}")

    print(f"\nüìà R√©sum√©: {long_count} d√©cision(s) LONG/ACHAT trouv√©e(s)")

    conn.close()


if __name__ == "__main__":
    diagnostic_db()
